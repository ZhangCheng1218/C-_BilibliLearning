//#include<iostream>
//#include<string>
//
//using namespace std;
////左移运算符重载
//class Person
//{
//	//友元实现访问私有成员
//	friend ostream& operator<<(ostream& cout, Person& p);
//public:
//	Person(int a,int b) //构造函数给私有对象赋值
//	{
//		m_A = a;
//		m_B = b;
//	}
//private:
//	//尝试利用成员函数重载，左移运算符
//	//通常不会利用成员函数重载左移运算符，因为无法实现cout在左侧
//	//void operator<<(cout) 
//	//{
//	//
//	//}
//	int m_A;
//	int m_B;
//};
////只能利用全局函数重载左移运算符
//ostream& operator<<(ostream& cout, Person& p)
//{
//	cout << "m_A=" << p.m_A
//		<< ",m_B=" << p.m_B;
//	return cout;
//}
//void test01()
//{
//	Person p(10,10);
//	cout << p << endl;//链式编程思想，重载的左移返回值为cout;
//}
//int main()
//{
//	test01();
//	return 0;
//}